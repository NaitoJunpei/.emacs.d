//window.addEventListener("load", function(){
    var canvas = d3.select("#canvas1");
    console.log("test");
    var svg = canvas.append("svg")
        .attr("width",960)
        .attr("height",500);
    //var svg = d3.select("svg");
    var data = d3.range(1000).map(d3.randomBates(10));
    //var data = [0, 1, 0.5, 0.6]
    console.log(data);
    var formatCount = d3.format(",.0f");
    var margin = {top: 10, right: 30, bottom: 30, left: 30};
    var width = +svg.attr("width") - margin.left - margin.right;
    var height = +svg.attr("height") - margin.top - margin.bottom;
    var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    var x = d3.scaleLinear()
	.rangeRound([0, width]);
    var bins = d3.histogram()
	.domain(x.domain())
        .thresholds(x.ticks(20))
    (data);
    var y = d3.scaleLinear()
	.domain([0, d3.max(bins, function(d) { return d.length; })])
	.range([height, 0]);
    var bar = g.selectAll(".bar")
	.data(bins)
	.enter().append("g")
	.attr("class", "bar")
	.attr("transform", function(d) { return "translate(" + x(d.x0) + "," + y(d.length) + ")" });

    bar.append("rect")
	.attr("x", 1)
	.attr("width", x(bins[0].x1) - x(bins[0].x0) - 1)
	.attr("height", function(d) {return height - y(d.length); });

    /* bar.append("text")
	.attr("dy", ".75em")
	.attr("y", 6)
	.attr("x", (x(bins[0].x1) - x(bins[0].x0)) / 2)
	.attr("text-anchor", "middle")
	.text(function(d) { return formatCount(d.length); }); */

     g.append("g")
	.attr("class", "axis axis--x")
	.attr("transform", "translate(0," + height + ")")
	.call(d3.axisBottom(x)); 
	      
    /* svg.selectAll("rect")
        .data(histogram(dataArr))
        .enter()
        .append("rect")
        .attr("x",function(d){return d.x * 20/6})//表示サイズを設定している．
        .attr("y", function(d){return 200-d.y * 5})
        .attr("width", function(d){return d.dx * 20/6})
        .attr("height", function(d){return d.y * 5})
        .attr("fill",function(d,i){return colors[i]}); */
//},false);
////Google Chart //////
google.charts.setOnLoadCallback(test_chart);
function test_chart() {
    var data3 = google.visualization.arrayToDataTable([
	['',''],
	[10,10],
	[15, 15],
	[20,0],
	[30,30]
    ]);
    var options1 =
	{ title: '散布図1',
	  legend: 'none',
	  lineWidth: 1,
	  curveType: 'function',
	  pointSize: 0,
	  hAxis: {
	      gridlines: {color: 'white'},
	      baselineColor: 'white',
	      textPosition: 'none'},
	  vAxis: {
	      gridlines: {color: 'white'},
	      baselineColor: 'white',
	      textPosition: 'none'},
	  backgroundColor: {
	      stroke: 'black',
	      strokeWidth: 1}
	}
    var chart1 = new google.visualization.ScatterChart(document.getElementById('google'));
    chart1.draw(data3, options1);
}

google.charts.setOnLoadCallback(test_chart2);
function test_chart2() {
    var arr = [];
    for (var i = 0; i < 1000; i++) {
	arr[i + 1] = [i, Math.sin(Math.PI * i / 1000)];
    }
    arr[0] = ['', ''];
    /* var data3 = google.visualization.arrayToDataTable([
	['',''],
	[10,10],
	[14, 100],
	[15,15],
	[20,0],
	[30,30],
	[100, 0]
	]); */
    var data3 = google.visualization.arrayToDataTable(arr);
    console.log(Math.sin(1));
    var options1 =
	{ title: '散布図1',
	  legend: 'none',
	  lineWidth: 1,
	  curveType: 'function',
	  hAxis: {
	      gridlines: {color: 'white'},
	      baselineColor: 'white',
	      textPosition: 'none'},
	  vAxis: {
	      gridlines: {color: 'white'},
	      baselineColor: 'white',
	      textPosition: 'none'},
	  backgroundColor: {
	      stroke: 'black',
	      strokeWidth: 1}
	}
    var chart1 = new google.visualization.AreaChart(document.getElementById('google2'));
    chart1.draw(data3, options1);
}

google.charts.setOnLoadCallback(test_chart3);
function test_chart3() {
    var arr = [];
    for (var i = 0; i < 1000; i++) {
	arr[i + 1] = [Math.sin(Math.PI * i / 1000)];
    }
    arr[0] = [''];
    /* var data3 = google.visualization.arrayToDataTable([
	['',''],
	[10,10],
	[14, 100],
	[15,15],
	[20,0],
	[30,30],
	[100, 0]
	]); */
    var data3 = google.visualization.arrayToDataTable(arr);
    var options1 =
	{ title: 'histogram',
	  legend: 'none',
	  chartArea: {
	      left: 1,
	      top: 1,
	      width: 798,
	      height: 68,
	      backgroundColor: {
		  stroke: "black",
		  strokeWidth: 1}},
	  hAxis: {
	      gridlines: {color: 'white'},
	      baselineColor: 'white',
	      textPosition: 'none'},
	  vAxis: {
	      gridlines: {color: 'white'},
	      baselineColor: 'white',
	      textPosition: 'none'},
	  colors: ["lightsalmon"]
	  /* backgroundColor: {
	      stroke: 'black',
	      strokeWidth: 1} */
	}
    var chart1 = new google.visualization.Histogram(document.getElementById('google3'));
    chart1.draw(data3, options1);
}

google.charts.setOnLoadCallback(test_chart4);
function test_chart4() {
    var arr = [];
    for (var i = 0; i < 1000; i++) {
	arr[i + 1] = [Math.sin(Math.PI * i / 1000), 1];
    }
    arr[0] = ['', ''];
    /* var data3 = google.visualization.arrayToDataTable([
	['',''],
	[10,10],
	[14, 100],
	[15,15],
	[20,0],
	[30,30],
	[100, 0]
	]); */
    var data3 = google.visualization.arrayToDataTable(arr);
    var options1 =
	{ title: 'histogram',
	  legend: 'none',
	  bar: {
	      groupWidth: 2},
	  chartArea: {
	      left: 0,
	      top: 0,
	      width: 798,
	      height: 68,
	      /* backgroundColor: {
		  stroke: "black",
		  strokeWidth: 1} */},
	  hAxis: {
	      gridlines: {color: 'white'},
	      baselineColor: 'white',
	      textPosition: 'none'},
	  vAxis: {
	      gridlines: {color: 'white'},
	      baselineColor: 'white',
	      textPosition: 'none',
	      maxValue: 0.5},
	  colors: ["black"],
	  /* backgroundColor: {
	      stroke: 'black',
	      strokeWidth: 1} */
	  orientation: 'horizontal',
	  focusTarget: 'none'
	}
    var chart1 = new google.visualization.BarChart(document.getElementById('google4'));
    chart1.draw(data3, options1);
}

    
