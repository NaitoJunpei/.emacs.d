package SulabApplet1;
public class NonGaussianEMmethod_tdp2_1{
	//非ガウスフィルタ and スムージング time-dependent-poisson(kappa=1と固定)
	//tdp2と書いてあるけど、これが初作でtdp1はない
	static NonGaussianFilter_tdp2_1 NGF;
	
	static double[] T;
	static int N;
	static double beta_lambda0 = 1;
	
	public static void Initialize (double[] t, double beta_lambda00){ //interspike intervalデータとハイパーパラメータ初期値を受け取る
		T = t;
		N = T.length;
		NGF.Initialize(T);
		beta_lambda0 = beta_lambda00;
	}
	
	public static double EMmethod (){
		double beta_lambda1 = 0;//step前の値をあらわす。
		double beta_lambda2 = beta_lambda0;//step後の値をあらわす。
		
		double[] nongaussianfilter;
		
		for(int j=0;j<1;j++){
			beta_lambda1 = beta_lambda2;
			
			nongaussianfilter = NGF.NonGaussianFilter_tdp(beta_lambda1);
			
			//beta_lambdaについて最大化
			beta_lambda2 = 1/nongaussianfilter[(nongaussianfilter.length-1)];
//			if((beta_lambda2>1.0e4)&&(beta_kappa2>1.0e4)){
//				break;
//			}else 
			if((Math.abs(beta_lambda1/beta_lambda2-1))<0.001){
				break;
			}
		}
		return beta_lambda2;
	}
}
